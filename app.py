from flask import Flask, request, redirect, url_for, session, render_template_string
from flask_sqlalchemy import SQLAlchemy
from flask_bcrypt import Bcrypt

app = Flask(__name__)
app.secret_key = "—Å—É–ø–µ—Ä_—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–ª—é—á"
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'

db = SQLAlchemy(app)
bcrypt = Bcrypt(app)

# üìÇ –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    login = db.Column(db.String(150), unique=True, nullable=False)
    password = db.Column(db.String(150), nullable=False)

# ‚öôÔ∏è –°–æ–∑–¥–∞—ë–º –ë–î –∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞
@app.before_first_request
def create_tables():
    db.create_all()
    if not User.query.filter_by(login="user").first():
        hashed_pw = bcrypt.generate_password_hash("1234").decode("utf-8")
        db.session.add(User(login="user", password=hashed_pw))
        db.session.commit()

# HTML —à–∞–±–ª–æ–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
login_html = """
<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<title>–í—Ö–æ–¥</title>
<style>
    body { background:#121212; color:#fff; font-family:Arial; text-align:center; }
    input,button{width:250px;padding:10px;margin:5px;border-radius:5px;border:none;}
    button{background:#6A5ACD;color:white;cursor:pointer;}
</style>
</head>
<body>
    <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
    <form method="post">
        <input name="login" placeholder="–õ–æ–≥–∏–Ω"><br>
        <input name="password" type="password" placeholder="–ü–∞—Ä–æ–ª—å"><br>
        <button type="submit">–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è</button>
    </form>
    {% if error %}<p style="color:red">{{ error }}</p>{% endif %}
</body>
</html>
"""

profile_html = """
<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="UTF-8">
<title>–ü—Ä–æ—Ñ–∏–ª—å</title>
<style>
    body { background:#121212; color:#fff; font-family:Arial; text-align:center; }
    .box { margin:50px auto;width:400px;padding:20px;background:#1e1e1e;border-radius:10px; }
    button{background:#6A5ACD;padding:10px;color:white;border:none;border-radius:5px;cursor:pointer;}
</style>
</head>
<body>
<div class="box">
    <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
    <p><b>–ù–∏–∫–Ω–µ–π–º:</b> {{nickname}}</p>
    <p><b>–ü–æ–¥–ø–∏—Å–∫–∞:</b> {{sub}}</p>
    <p><b>–ü–∞–º—è—Ç—å:</b> {{mem}}</p>
    <p><b>ID:</b> {{ident}}</p>
    <a href="/logout"><button>–í—ã–π—Ç–∏</button></a>
</div>
</body>
</html>
"""

@app.route("/", methods=["GET", "POST"])
def login():
    if request.method == "POST":
        login = request.form["login"]
        password = request.form["password"]
        user = User.query.filter_by(login=login).first()

        if user and bcrypt.check_password_hash(user.password, password):
            session["user"] = user.login
            return redirect(url_for("profile"))
        else:
            return render_template_string(login_html, error="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")

    return render_template_string(login_html)

@app.route("/profile")
def profile():
    if "user" not in session:
        return redirect(url_for("login"))
    return render_template_string(profile_html, nickname=session["user"], sub="02-06-2025", mem="3772Mb", ident="202")

@app.route("/logout")
def logout():
    session.pop("user", None)
    return redirect(url_for("login"))

if __name__ == "__main__":
    app.run(debug=True)
